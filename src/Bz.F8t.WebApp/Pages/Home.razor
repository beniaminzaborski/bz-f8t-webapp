@page "/"

@using Bz.F8t.WebApp.ApiClients.Dtos
@using Bz.F8t.WebApp.Components

@inject ICompetitionApi competitionApi

<PageTitle>Feet On The Tarmac</PageTitle>

<h1>Hello in Feet On The Tarmac App!</h1>

<p>Find your competition and join as competitior. It's easy! Just fill the registration form.</p>

<div class="row row-cols-1 row-cols-md-3 g-4">
    @if (competitions == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        @foreach (var competition in competitions)
        {
            <div class="col">
               <CompetitionCard Competition=@competition/>
            </div>
        }
    }
</div>

@code {
    private const string statusOpenedForRegistration = "Opened";

    private IEnumerable<CompetitionDto>? competitions = null;

    protected override async Task OnInitializedAsync()
    {
        competitions = new List<CompetitionDto>
        {
            new CompetitionDto(Guid.NewGuid(), new DateTime(2023, 12, 06, 08, 30, 00), new DistanceDto(21, "Kilometers"), new CompetitionPlaceDto("Kraków", 0, 0), 4750, "Closed", Array.Empty<CheckpointDto>()),
            new CompetitionDto(Guid.NewGuid(), new DateTime(2024, 01, 01, 08, 30, 00), new DistanceDto(10, "Kilometers"), new CompetitionPlaceDto("Kielce", 0, 0), 1500, "Opened", Array.Empty<CheckpointDto>()),
            new CompetitionDto(Guid.NewGuid(), new DateTime(2024, 01, 02, 11, 00, 00), new DistanceDto(21, "Kilometers"), new CompetitionPlaceDto("Warszawa", 0, 0), 8000, "Opened", Array.Empty<CheckpointDto>()),
            new CompetitionDto(Guid.NewGuid(), new DateTime(2024, 02, 10, 09, 00, 00), new DistanceDto(42, "Kilometers"), new CompetitionPlaceDto("Poznań", 0, 0), 1500, "Opened", Array.Empty<CheckpointDto>()),
            new CompetitionDto(Guid.NewGuid(), new DateTime(2024, 02, 10, 10, 00, 00), new DistanceDto(21, "Kilometers"), new CompetitionPlaceDto("Łódź", 0, 0), 1500, "Opened", Array.Empty<CheckpointDto>())
        };

        //competitions = await competitionApi.GetAllCompetitionsAsync();

        competitions = competitions.OrderByDescending(c => c.StartAt).ToList();
    }
}